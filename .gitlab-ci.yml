variables:
    BUILD_SCRIPT_DEPENDENCIES:
        "build-essential
        git
        cmake
        libboost-dev
        libz-dev
        flex
        bison
        libbison-dev
        tcl"

    DEPENDENCIES_GUI:
        "libsfml-dev
        qtbase5-dev"

    GIT_SUBMODULE_STRATEGY: recursive

    DEBIAN_FRONTEND: "noninteractive"

stages:
    - build

pages:
    image: alpine
    stage: build
    before_script:
        - apk update
        - apk add doxygen
    script:
        - cd doc
        - doxygen Doxyfile
        - cd ..
        - mv doc/documentation/html/ public/
    artifacts:
        paths:
            - public
    only:
        - master

build_ophidian:
    image: ubuntu:bionic
    stage: build
    before_script:
        - apt-get update -qq && apt-get install -qq -y apt-transport-https ca-certificates gnupg software-properties-common wget
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
        - apt-get update -qq && apt-get install -qq -y $BUILD_SCRIPT_DEPENDENCIES $DEPENDENCIES
    script:
        - echo "y" | bash build_dependencies.sh
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr
                -DCMAKE_BUILD_TYPE=Release
                ..
        - make -j2
        - ctest --output-on-failure
    artifacts:
        paths:
            - build/

build_ophidian_usr_local:
    image: ubuntu:bionic
    stage: build
    before_script:
        - apt-get update -qq && apt-get install -qq -y apt-transport-https ca-certificates gnupg software-properties-common wget
        - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
        - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
        - apt-get update -qq && apt-get install -qq -y $BUILD_SCRIPT_DEPENDENCIES $DEPENDENCIES_GUI
    script:
        - echo y | bash build_dependencies.sh --install_to /usr/local
        - mkdir build && cd build
        - cmake -DCMAKE_INSTALL_PREFIX=/usr
                -DCMAKE_BUILD_TYPE=Release
                ..
        - make -j2
        - ctest --output-on-failure
    artifacts:
        paths:
            - build/
